package views;

import java.io.IOException;
import com.fizzed.rocker.ForIterator;
import com.fizzed.rocker.RenderingException;
import com.fizzed.rocker.RockerContent;
import com.fizzed.rocker.RockerOutput;
import com.fizzed.rocker.runtime.DefaultRockerTemplate;
import com.fizzed.rocker.runtime.PlainTextUnloadedClassLoader;
// import @ [1:1]
import java.util.List;
// import @ [2:1]
import joobyapp.Fortune;

/*
 * Auto generated code to render template views/fortunes.rocker.html
 * Do not edit this file. Changes will eventually be overwritten by Rocker parser!
 */
@SuppressWarnings("unused")
public class fortunes extends com.fizzed.rocker.runtime.DefaultRockerModel {

    static public com.fizzed.rocker.ContentType getContentType() { return com.fizzed.rocker.ContentType.HTML; }
    static public String getTemplateName() { return "fortunes.rocker.html"; }
    static public String getTemplatePackageName() { return "views"; }
    static public String getHeaderHash() { return "625141204"; }
    static public String[] getArgumentNames() { return new String[] { "fortunes" }; }

    // argument @ [3:2]
    private List<Fortune> fortunes;

    public fortunes fortunes(List<Fortune> fortunes) {
        this.fortunes = fortunes;
        return this;
    }

    public List<Fortune> fortunes() {
        return this.fortunes;
    }

    static public fortunes template(List<Fortune> fortunes) {
        return new fortunes()
            .fortunes(fortunes);
    }

    @Override
    protected DefaultRockerTemplate buildTemplate() throws RenderingException {
        // optimized for performance (via rocker.optimize flag; no auto reloading)
        return new Template(this);
    }

    static public class Template extends com.fizzed.rocker.runtime.DefaultRockerTemplate {

        //     <!DOCTYPE html>\n    <html>\n\n    <head>\n        <title>Fortunes</title>\n    </head>\n\n    <body>\n        <table>\n            <tr>\n                <th>id</th>\n                <th>message</th>\n            </tr>\n
        static private final byte[] PLAIN_TEXT_0_0;
        //             <tr>\n                <td>
        static private final byte[] PLAIN_TEXT_1_0;
        // </td>\n                <td>
        static private final byte[] PLAIN_TEXT_2_0;
        // </td>\n            </tr>\n
        static private final byte[] PLAIN_TEXT_3_0;
        //         </table>\n    </body>\n\n    </html>
        static private final byte[] PLAIN_TEXT_4_0;

        static {
            PlainTextUnloadedClassLoader loader = PlainTextUnloadedClassLoader.tryLoad(fortunes.class.getClassLoader(), fortunes.class.getName() + "$PlainText", "UTF-8");
            PLAIN_TEXT_0_0 = loader.tryGet("PLAIN_TEXT_0_0");
            PLAIN_TEXT_1_0 = loader.tryGet("PLAIN_TEXT_1_0");
            PLAIN_TEXT_2_0 = loader.tryGet("PLAIN_TEXT_2_0");
            PLAIN_TEXT_3_0 = loader.tryGet("PLAIN_TEXT_3_0");
            PLAIN_TEXT_4_0 = loader.tryGet("PLAIN_TEXT_4_0");
        }

        // argument @ [3:2]
        protected final List<Fortune> fortunes;

        public Template(fortunes model) {
            super(model);
            __internal.setCharset("UTF-8");
            __internal.setContentType(getContentType());
            __internal.setTemplateName(getTemplateName());
            __internal.setTemplatePackageName(getTemplatePackageName());
            this.fortunes = model.fortunes();
        }

        @Override
        protected void __doRender() throws IOException, RenderingException {
            // PlainText @ [3:31]
            __internal.aboutToExecutePosInTemplate(3, 31);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // ForBlockBegin @ [17:13]
            __internal.aboutToExecutePosInTemplate(17, 13);
            try {
                com.fizzed.rocker.runtime.Java8Iterator.forEach(fortunes, (it) -> {
                    try {
                        // PlainText @ [17:34]
                        __internal.aboutToExecutePosInTemplate(17, 34);
                        __internal.writeValue(PLAIN_TEXT_1_0);
                        // ValueExpression @ [19:21]
                        __internal.aboutToExecutePosInTemplate(19, 21);
                        __internal.renderValue(it.getId(), false);
                        // PlainText @ [19:32]
                        __internal.aboutToExecutePosInTemplate(19, 32);
                        __internal.writeValue(PLAIN_TEXT_2_0);
                        // ValueExpression @ [20:21]
                        __internal.aboutToExecutePosInTemplate(20, 21);
                        __internal.renderValue(it.getMessage(), false);
                        // PlainText @ [20:37]
                        __internal.aboutToExecutePosInTemplate(20, 37);
                        __internal.writeValue(PLAIN_TEXT_3_0);
                        // ForBlockEnd @ [17:13]
                        __internal.aboutToExecutePosInTemplate(17, 13);
                    } catch (com.fizzed.rocker.runtime.ContinueException e) {
                        // support for continuing for loops
                    }
                }); // for end @ [17:13]
            } catch (com.fizzed.rocker.runtime.BreakException e) {
                // support for breaking for loops
            }
            // PlainText @ [22:14]
            __internal.aboutToExecutePosInTemplate(22, 14);
            __internal.writeValue(PLAIN_TEXT_4_0);
        }
    }

    private static class PlainText {

        static private final String PLAIN_TEXT_0_0 = "    <!DOCTYPE html>\n    <html>\n\n    <head>\n        <title>Fortunes</title>\n    </head>\n\n    <body>\n        <table>\n            <tr>\n                <th>id</th>\n                <th>message</th>\n            </tr>\n";
        static private final String PLAIN_TEXT_1_0 = "            <tr>\n                <td>";
        static private final String PLAIN_TEXT_2_0 = "</td>\n                <td>";
        static private final String PLAIN_TEXT_3_0 = "</td>\n            </tr>\n";
        static private final String PLAIN_TEXT_4_0 = "        </table>\n    </body>\n\n    </html>";

    }

}
